<%- include("../partials/user/header.ejs") %>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<style>
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f9f9f9;
    color: #333;
  }

  h2 {
    font-size: 2.5rem;
    font-weight: bold;
    color: #088178;
  }
  h5 {
    color:#ffffff
  }

  .card {
    transition: all 0.3s ease;
    border: none;
    border-radius: 10px;
    overflow: hidden;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .card-header {
    background: linear-gradient(135deg, #088178, #088178);
    color: white;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .badge {
    font-size: 0.85em;
    padding: 0.5em 0.75em;
    border-radius: 12px;
  }

  .btn-sm {
    font-size: 0.9rem;
    padding: 0.4rem 0.8rem;
    border-radius: 5px;
    transition: transform 0.2s ease, background-color 0.3s ease;
  }

  .btn-sm:hover {
    transform: scale(1.05);
    background-color: #f8f9fa;
  }

  table {
    font-size: 0.95rem;
  }

  .thead-light th {
    background-color: #e9ecef;
    color: #495057;
    font-weight: bold;
  }

  .card-footer {
    background: #f1f1f1;
  }

  .btn-primary {
    background-color: #088178;
    border: none;
  }

  .btn-primary:hover {
    background-color: #088178;
  }
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
    margin-bottom: 1rem;
    list-style: none;
    padding: 0;
  }

  .pagination a {
    text-decoration: none;
    color: #088178;
    background-color: #f1f1f1;
    padding: 0.5rem 0.75rem;
    border-radius: 5px;
    margin: 0 0.25rem;
    transition: all 0.3s ease;
    font-weight: 500;
  }

  .pagination a:hover {
    background-color: #088178;
    color: #ffffff;
    transform: scale(1.05);
  }

  .pagination a.active {
    background-color: #088178;
    color: #ffffff;
    font-weight: bold;
  }

  .pagination a:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
  .modal {
  transition: none;
}

.modal-dialog {
  transform: none !important;
}

.card:hover {
  transform: translateY(-5px);
}

.modal-open .card:hover {
  transform: none;
  pointer-events: none;
}

  
</style>

<div id="preloader-active">
  <div class="preloader d-flex align-items-center justify-content-center">
      <div class="preloader-inner position-relative">
          <div class="text-center">
              <h5 class="mb-5">Now Loading</h5>
              <div class="loader">
                  <div class="bar bar1"></div>
                  <div class="bar bar2"></div>
                  <div class="bar bar3"></div>
              </div>
          </div>
      </div>
  </div>
</div>

<div class="container my-5">
  <h2 class="text-center mb-4">Your Orders</h2>
  <div class="row">
    <% orderDetails.forEach(order => { %>
      <div class="col-12 mb-4">
        <div class="card shadow-sm">
          <div class="card-header">
            <h5 class="mb-0">Order Id: #<%= order._id %></h5>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead class="thead-light">
                  <tr>
                    <th>Ordered Date</th>
                    <th>Product</th>
                    <th>Status</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Payment Status</th>
                    <th>payment Method</th>
                    <th>Actions</th>
                    <th>More Details</th>
                  </tr>
                </thead>
                <tbody>
                  <% order.orderedItems.forEach(item => { %>
                    <tr>
                      <td><%= item.product?.createdAt.toDateString() %></td>
                      <td><%= item.product?.productName %></td>
                      <td>
                        <span>
                          <%= item.status %>
                        </span>
                      </td>
                      <td><%= item.quantity %></td>
                      <td>â‚¹<%= item.price %></td>
                      <td><%=order.paymentStatus%></td>
                      <td><%=order.paymentMethod%></td>
                      <td>
                        <% if (item.status === 'Pending' || item.status === 'Shipped') { %>
                          <button type="button" class="btn btn-danger btn-sm" onclick="confirmCancel('<%= order._id %>', '<%= item.product._id %>')">
                            Cancel
                          </button>
                        <% } else if (item.status === 'Cancelled') { %>
                          <span class="text-danger">Cancelled</span>
                        <% } else if (item.status === 'Delivered') { %>

                          <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#returnModal<%= item.product._id %>">
                            Return
                          </button>

                          <div class="modal fade" id="returnModal<%= item.product._id %>" tabindex="-1" aria-labelledby="returnModalLabel<%= item.product._id %>" aria-hidden="true">
                            <div class="modal-dialog">
                              <div class="modal-content">
                                <div class="modal-header">
                                  <h5 class="modal-title" id="returnModalLabel<%= item.product._id %>">Return Product</h5>
                                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <form id="form-returnModal<%= item.product._id %>" action="/orders/<%= order._id %>/products/<%= item.product._id %>/return" method="POST" onsubmit="submitReturn('form-returnModal<%= item.product._id %>'); return false;">
                                  <div class="modal-body">
                                    <div class="mb-3">
                                      <label for="returnReason<%= item.product._id %>" class="form-label">Reason for Return</label>
                                      <textarea class="form-control" id="returnReason<%= item.product._id %>" name="returnReason" rows="3" required></textarea>
                                    </div>
                                  </div>
                                  <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-danger">Submit Return</button>
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        <% } else if (item.status === 'Return') { %>
                          <span class="text-warning" style="color: #fd7e14 !important;">Returned</span>
                        <% } %>
                      </td>
                      <td><a href="/invoice?orderId=<%=order._id%>">View Details</a></td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    <% }) %>
  </div>
</div>

<div class="pagination">
  <% if (currentPage > 1) { %>
    <a href="?page=<%= currentPage - 1 %>"><</a>
  <% } %>
  <% for (let i = 1; i <= totalPages; i++) { %>
    <a href="?page=<%= i %>" <%= currentPage === i ? "class='active'" : "" %>><%= i %></a>
  <% } %>
  <% if (currentPage < totalPages) { %>
    <a href="?page=<%= currentPage + 1 %>">></a>
  <% } %>
</div>

<%- include("../partials/user/footer.ejs") %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function confirmCancel(orderId, product) {
  Swal.fire({
    title: 'Are you sure?',
    text: "Do you want to cancel this product?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes, cancel it!',
    cancelButtonText: 'No, keep it'
  }).then((result) => {
    if (result.isConfirmed) {
      cancelProduct(orderId, product);
    }
  });
}

function cancelProduct(orderId, product) {
    console.log(`Cancelling order: ${orderId}, product: ${product}`);

    fetch(`/orders/${orderId}/products/${product}/cancel`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        console.log("Cancel response data:", data);
        if (data.success) {
            Swal.fire({
                title: 'Cancelled!',
                text: 'Your product has been cancelled and refund processed if applicable.',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                window.location.href = '/orderDetaile';
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: data.message || 'Failed to cancel the product.',
                icon: 'error'
            });
        }
    })
    .catch(error => {
        console.error('Fetch error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again.',
            icon: 'error'
        });
    });
}

function submitReturn(formId) {
    event.preventDefault();

    const form = document.getElementById(formId);
    const formData = new FormData(form);
    const url = form.getAttribute('action');

    console.log("Submitting return form to:", url);
    console.log("Form data:", Object.fromEntries(formData));

    fetch(url, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        console.log("Return response data:", data);
        const modalId = formId.replace('form-', '');
        const modalElement = document.getElementById(modalId);
        if (modalElement) {
            const modal = bootstrap.Modal.getInstance(modalElement);
            if (modal) {
                modal.hide();
            }
        }

        if (data.success) {
            Swal.fire({
                title: 'Returned',
                text: 'Your return request has been submitted successfully and refund processed if applicable.',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                window.location.href = '/orderDetaile';
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: data.message || 'Failed to process return.',
                icon: 'error'
            });
        }
    })
    .catch(error => {
        console.error('Fetch error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again.',
            icon: 'error'
        });
    });
}

</script>
