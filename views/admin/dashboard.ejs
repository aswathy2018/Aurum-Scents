<%- include('../partials/admin/adminHeader.ejs') %>
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        
        .dashboard-container {
            margin-left: 270px;
            width: calc(90% - 200px);
        }
        
        .card {
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }
        
        .card:hover {
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }
        
        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }
        
        .filter-button {
            background-color: #4f46e5;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 500;
            transition: background-color 0.2s;
        }
        
        .filter-button:hover {
            background-color: #4338ca;
        }
        
        .filter-select {
            border: 1px solid #e2e8f0;
            border-radius: 0.375rem;
            padding: 0.5rem 1rem;
            background-color: white;
        }
        
        .date-input {
            border: 1px solid #e2e8f0;
            border-radius: 0.375rem;
            padding: 0.5rem 1rem;
            background-color: white;
        }
        
        .section-title {
            color: #1e293b;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #f1f5f9;
        }
    </style>
</head>

<body class="text-gray-800">
    <div class="dashboard-container p-6">
        <h1 class="text-3xl font-bold mb-6 text-dark">Admin Dashboard</h1>

        <div class="card bg-white p-6 mb-6">
            <h2 class="section-title text-xl">Sales Report</h2>
            
            <div class="flex flex-wrap gap-4 mb-6">
                <select id="filter" class="filter-select">
                    <option value="today">Today</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly" selected>Monthly</option>
                    <option value="yearly">Yearly</option>
                    <option value="custom">Custom Date Range</option>
                </select>

                <input type="date" id="startDate" class="date-input hidden" max="">
                <input type="date" id="endDate" class="date-input hidden" max="">
                <button id="applyFilter" class="filter-button hidden">Apply</button>
            </div>

            <div class="chart-container">
                <canvas id="salesChart"></canvas>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <div class="card bg-white p-6">
                <h2 class="section-title text-lg">Best Selling Products</h2>
                <div class="chart-container h-64">
                    <canvas id="bestSellingProductsChart"></canvas>
                </div>
            </div>
            <div class="card bg-white p-6">
                <h2 class="section-title text-lg">Best Selling Brands</h2>
                <div class="chart-container h-64">
                    <canvas id="bestSellingBrandsChart"></canvas>
                </div>
            </div>
            <div class="card bg-white p-6">
                <h2 class="section-title text-lg">Best Selling Categories</h2>
                <div class="chart-container h-64">
                    <canvas id="bestSellingCategoriesChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterSelect = document.getElementById('filter');
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const applyButton = document.getElementById('applyFilter');
            startDateInput.disabled = true;
            endDateInput.disabled = true;
            applyButton.disabled = true;
            const today = new Date().toISOString().split('T')[0];
            startDateInput.setAttribute('max', today);
            endDateInput.setAttribute('max', today);
    
            filterSelect.addEventListener('change', function () {
                if (this.value === 'custom') {
                    startDateInput.disabled = false;
                    endDateInput.disabled = false;
                    applyButton.disabled = false;
                    startDateInput.classList.remove('hidden');
                    endDateInput.classList.remove('hidden');
                    applyButton.classList.remove('hidden');
                } else {
                    startDateInput.disabled = true;
                    endDateInput.disabled = true;
                    applyButton.disabled = true;
                    startDateInput.classList.add('hidden');
                    endDateInput.classList.add('hidden');
                    applyButton.classList.add('hidden');
                    loadSalesChart(this.value);
                }
            });
    
            applyButton.addEventListener('click', () => {
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;
    
                if (!startDate || !endDate) {
                    Swal.fire('Warning', 'Please select both start and end dates.', 'warning');
                    return;
                }
    
                if (new Date(startDate) > new Date(endDate)) {
                    Swal.fire('Error', 'Start date cannot be later than end date.', 'error');
                    return;
                }
    
                loadSalesChart('custom', startDate, endDate);
            });
    
            let salesChart, productChart, brandChart, categoryChart;
    
            async function fetchData(url) {
                try {
                    const res = await fetch(url);
                    if (!res.ok) throw new Error('Failed to fetch data');
                    return await res.json();
                } catch (error) {
                    console.error('Fetch error:', error);
                    Swal.fire('Error', 'Failed to load data.', 'error');
                    return [];
                }
            }
    
            function destroyChart(chart) {
                if (chart) chart.destroy();
            }
    
            async function loadSalesChart(filter = 'monthly', startDate = '', endDate = '') {
                let url = `/admin/sales-report?filter=${filter}`;
                if (filter === 'custom' && startDate && endDate) {
                    url += `&startDate=${startDate}&endDate=${endDate}`;
                }
    
                const data = await fetchData(url);
                console.log("kkk",data)
                
                const labels = data.map(item => item._id);
                const values = data.map(item => item.totalSales);

                console.log("Data Received:", data);
                console.log("Extracted Labels:", data.map(item => item._id));
                console.log("Extracted Values:", data.map(item => item.totalSales));

    
                destroyChart(salesChart);
                salesChart = new Chart(document.getElementById('salesChart'), {
                    type: 'line',
                    data: {
                        labels,
                        datasets: [{
                            label: 'Total Sales (â‚¹)' ,
                            data: values,
                            borderColor: '#4f46e5',
                            backgroundColor: 'rgba(79, 70, 229, 0.1)',
                            borderWidth: 2,
                            pointBackgroundColor: '#4f46e5',
                            pointRadius: 4,
                            tension: 0.3,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: { beginAtZero: true },
                            x: { grid: { display: false } }
                        }
                    }
                });
            }
    
            async function loadBestSellingProducts() {
                const data = await fetchData('/admin/best-selling-products');
                const labels = data.map(item => item.productName);
                const values = data.map(item => item.totalSold);
    
                destroyChart(productChart);
                productChart = new Chart(document.getElementById('bestSellingProductsChart'), {
                    type: 'bar',
                    data: {
                        labels,
                        datasets: [{
                            label: 'Units Sold',
                            data: values,
                            backgroundColor: 'rgba(239, 68, 68, 0.8)',
                            borderRadius: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: { legend: { display: false } },
                        scales: { y: { beginAtZero: true } }
                    }
                });
            }
    
            async function loadBestSellingBrands() {
                const data = await fetchData('/admin/best-selling-brands');
                const labels = data.map(item => item._id || 'Unknown');
                const values = data.map(item => item.totalSold);
    
                destroyChart(brandChart);
                brandChart = new Chart(document.getElementById('bestSellingBrandsChart'), {
                    type: 'bar',
                    data: {
                        labels,
                        datasets: [{
                            label: 'Units Sold',
                            data: values,
                            backgroundColor: 'rgba(16, 185, 129, 0.8)',
                            borderRadius: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: { legend: { display: false } },
                        scales: { y: { beginAtZero: true } }
                    }
                });
            }
    
            async function loadBestSellingCategories() {
                const data = await fetchData('/admin/best-selling-categories');
                const labels = data.map(item => item.categoryName);
                const values = data.map(item => item.totalSold);
    
                destroyChart(categoryChart);
                categoryChart = new Chart(document.getElementById('bestSellingCategoriesChart'), {
                    type: 'bar',
                    data: {
                        labels,
                        datasets: [{
                            label: 'Units Sold',
                            data: values,
                            backgroundColor: 'rgba(59, 130, 246, 0.8)',
                            borderRadius: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: { legend: { display: false } },
                        scales: { y: { beginAtZero: true } }
                    }
                });
            }
    
            loadSalesChart();
            loadBestSellingProducts();
            loadBestSellingBrands();
            loadBestSellingCategories();
        });
    </script>

</body>