<%- include('../partials/admin/adminHeader.ejs') %>



<style>
    /* Category Management Styles */
    .main-content {
      margin-left: 250px;
      padding: 20px;
    }
    .main-content h1 {
    font-family: 'Arial', sans-serif;
    font-size: 2.5rem;
    color: #2c3e50;
    text-align: center;
    margin: 20px 0;
    margin-top: 30px;
    letter-spacing: 2px;
    }

    .category-container {
      display: flex;
      gap: 20px;
      margin: 30px;
    }

    .category-form {
      flex: 0 0 300px;
      padding: 20px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .form-group {
      margin-bottom: 15px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      color: #666;
    }

    .form-group input,
    .form-group textarea {
      width: 85%;
      padding: 8px;
      border: 1px solid #e0e0e0;
      border-radius: 4px;
      background: #f5f5f5;
    }

    .form-group textarea {
      height: 100px;
      resize: vertical;
    }

    .create-btn {
      width: 80%;
      padding: 10px;
      background: #008080;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .table-container {
      flex: 1;
      overflow-x: auto;
    }

    .category-table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .category-table th,
    .category-table td {
      padding: 12px 15px;
      text-align: center;
      border-bottom: 1px solid #e0e0e0;
    }

    .category-table th {
      background: #f5f5f5;
      font-weight: 600;
      color: #333;
    }

    .offer-buttons {
      display: flex;
      gap: 5px;
    }

    .btn-add-offer,
    .btn-remove,
    .btn-edit {
      padding: 6px 12px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 12px;
    }

    .btn-add-offer {
      background: #00bcd4;
      color: white;
    }

    .btn-remove {
      background: #ff4444;
      color: white;
    }

    .btn{
      text-decoration: none;
    }

    .btn-edit {
      background: #00bcd4;
      color: white;
    }

    .status-buttons {
      display: flex;
      gap: 5px;
      justify-content: center;
    }

    .btn-status {
      padding: 4px 8px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 12px;
      transition: background-color 0.3s, color 0.3s;
    }

    .btn-listed {
      background-color: #4CAF50;
      color: white;
      
    }

    .btn-unlisted {
      background-color: #f44336;
      color: white;
    }

    .btn-status:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  </style>
</head>

  <!-- Main Content -->
  <div class="main-content">
    <h1 class = "Heading">Category Management</h1>

    <div class="category-container">
      <!-- Add Category Form -->
      <div class="category-form">
        <form action="/admin/addCategory" method="POST">
          <div class="form-group">
            <label for="name">Name</label>
            <input type="text" id="name" name="name" placeholder="Type here" required>
          </div>
          
          <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" name="description" placeholder="Type here" required></textarea>
          </div>

          <button type="submit" class="create-btn">Create category</button>
        </form>
      </div>

      <!-- Categories Table -->
      <div class="table-container">
        <table class="category-table">
          <thead>
            <tr>
              <th>Name</th>
              <th>Description</th>
              <th>Offer Price</th>
              <th>Offer</th>
              <th>Status</th>
              <th>Edit</th>
            </tr>
          </thead>
          <tbody>
            <% cat.forEach((category)=> { %>
            <tr>
              <td><%= category.name %></td>
              <td><%= category.description %></td>
              <td><%= category.offerPrice || 'NA' %></td>
              <td class="offer-buttons">
                <button class="btn-add-offer" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                <button class="btn-remove" onclick="removeOffer('<%= category._id %>')">Remove</button>
              </td>
              <td>
                
                <div class="status-buttons">
                  <%if(category.islisted){%>

                 

                  <button class="btn-status btn-islisted">
                    <a class="btn" href="/admin/unlistcategory?id=<%= category._id %>">Unlist</a>
                  </button>

                  <%}else{%>
                  <button class="btn-status btn-unlisted">
                  <a class="btn" href="/admin/listcategory?id=<%= category._id %>">List</a>
                  </button>
                  <%}%>
                </div>
              </label>
              </td>
              <td>
                <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-edit"> Edit </a>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div class="pagination-container">
    <% if (currentPage > 1) { %>
    <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
    <% } %> <% for (let i = 1; i <= totalPages; i++) { %> 
      <% if (i === currentPage) { %>
    <span class="current-page"><%= i %></span>
    <% } else { %>
    <a href="?page=<%= i %>"><%= i %></a>
    <% } %> <% } %> <% if (currentPage < totalPages) { %>
    <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
    <% } %>
  </div>  
 
  <script>
    // console.log("jkdk",cat)
    function handleFormSubmit(event){
      event.preventDefault(e);
      if(!validateForm()){
      return
      }
      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("descriptionId").value;
  
      fetch('/admin/addCategory', {
        method: 'POST',
        headers: {
          'content-type':'application/json'
        },
        body:JSON.stringify({name, description})
      })
      .then(response=>{
        if(!response.ok){
          return response.json().then(err =>{
            throw new Error(err.error)
          })
        }
        return response.json()
      })
      .then(data =>{
        location.reload();
      })
      .catch(error =>{
        if(error.message === "Category already exists"){
          Swal.fire("The category is already exist..");
        }
        else{
          Swal.fire("An error occured while adding the category");
        }
      })
    }
  
  
    function validateForm(){
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      isValid = true;
  
  
      if(name===""){
        displayErrorMessage("name-error", "Please enter a name ");
        isValid = false
      }else if(!/^[a-zA-Z\s]+$/.test(name)){
        displayErrorMessage("name-error", "Category name should contain only alphabetic charecters");
        isValid = false
      }
  
      if(description===""){
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
      }
      return isValid
    }
  
  
    function displayErrorMessage(elementId, message){
      var errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }
  
    function clearErrorMessages(){
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach((element)=>{
        element.innerText = "";
        element.style.display = "none"
      })
    }
  
    
  </script>
